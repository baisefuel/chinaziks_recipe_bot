from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from telegram.ext import ContextTypes
import os

async def start_add_recipe(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["add_recipe"] = {}
    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
    img_path = os.path.join(BASE_DIR, '..', 'resources', 'images', 'add_recipe.png')

    caption = "‚úçÔ∏è –ù–∞—á–Ω–µ–º —Å –Ω–∞–∑–≤–∞–Ω–∏—è –±–ª—é–¥–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–û–≤–æ—â–Ω–æ–µ —Ä–∞–≥—É¬ª –∏–ª–∏ ¬´Chicken soup¬ª"
    
    with open(img_path, 'rb') as photo:
        if update.message:
            await update.message.reply_photo(
                photo=photo,
                caption=caption
            )
        elif update.callback_query:
            await update.callback_query.message.reply_photo(
                photo=photo,
                caption=caption
            )

async def handle_add_recipe(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if "add_recipe" not in context.user_data:
        BASE_DIR = os.path.dirname(os.path.abspath(__file__))
        img_path = os.path.join(BASE_DIR, '..', 'resources', 'images', 'add_recipe.png')
        
        with open(img_path, 'rb') as photo:
            await update.message.reply_photo(
                photo=photo,
                caption="–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç, —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç'. –í–≤–µ–¥–∏ /start –∑–∞–Ω–æ–≤–æ."
            )
        return

    recipe_data = context.user_data["add_recipe"]
    text = update.message.text
    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
    img_path = os.path.join(BASE_DIR, '..', 'resources', 'images', 'add_recipe.png')

    if "name" not in recipe_data:
        recipe_data["name"] = text
        with open(img_path, 'rb') as photo:
            await update.message.reply_photo(
                photo=photo,
                caption="üìã –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. –ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–∫–∞—Ä—Ç–æ—à–∫–∞, –º–æ—Ä–∫–æ–≤—å, –ª—É–∫¬ª –∏–ª–∏ ¬´potatoes, carrots, onions¬ª."
            )
    elif "ingredients" not in recipe_data:
        recipe_data["ingredients"] = text
        with open(img_path, 'rb') as photo:
            await update.message.reply_photo(
                photo=photo,
                caption="‚öñÔ∏è –°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–∂–¥–æ–≥–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞ —Å –Ω—É–∂–Ω—ã–º–∏ –µ–¥–∏–Ω–∏—Ü–∞–º–∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. –ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–∫–∞—Ä—Ç–æ—à–∫–∞ 500 –≥, —Å–æ–ª—å 1 —â–µ–ø–æ—Ç–∫–∞, –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω–æ–µ –º–∞—Å–ª–æ 2 —Å—Ç. –ª.¬ª."
            )
    elif "ingredients_raw" not in recipe_data:
        recipe_data["ingredients_raw"] = text if text.lower() != "–Ω–µ—Ç" else ""
        with open(img_path, 'rb') as photo:
            await update.message.reply_photo(
                photo=photo,
                caption='üë®‚Äçüç≥ –î–∞–ª–µ–µ –æ–ø–∏—à–∏—Ç–µ –ø–æ—à–∞–≥–æ–≤–æ, –∫–∞–∫ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —ç—Ç–æ –±–ª—é–¥–æ. –í—ã –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –∏–ª–∏ –ø—É–Ω–∫—Ç–∞–º–∏.\n'
                        '–ù–∞–ø—Ä–∏–º–µ—Ä:\n'
                        '¬´1. –û—á–∏—Å—Ç–∏—Ç—å –∏ –Ω–∞—Ä–µ–∑–∞—Ç—å –≤—Å–µ –æ–≤–æ—â–∏.\n'
                        '2. –í–∞—Ä–∏—Ç—å –≥–æ–≤—è–¥–∏–Ω—É 1,5 —á–∞—Å–∞ –Ω–∞ –Ω–µ–±–æ–ª—å—à–æ–º –æ–≥–Ω–µ.\n'
                        '3. –î–æ–±–∞–≤–∏—Ç—å –æ–≤–æ—â–∏ –∏ –≤–∞—Ä–∏—Ç—å –µ—â–µ 10 –º–∏–Ω—É—Ç.¬ª'
            )
    elif "steps" not in recipe_data:
        recipe_data["steps"] = text
        with open(img_path, 'rb') as photo:
            await update.message.reply_photo(
                photo=photo,
                caption="üçΩ –£–∫–∞–∂–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ –ø–æ—Ä—Ü–∏–π –ø–æ–ª—É—á–∞–µ—Ç—Å—è –∏–∑ —ç—Ç–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞? –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´4¬ª."
            )
    elif "servings" not in recipe_data:
        recipe_data["servings"] = text
        with open(img_path, 'rb') as photo:
            await update.message.reply_photo(
                photo=photo,
                caption='üçΩ –£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –æ–¥–Ω–æ–π –ø–æ—Ä—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –≥—Ä–∞–º–º–∞—Ö: "250 –≥".'
            )
    elif "serving_size" not in recipe_data:
        recipe_data["serving_size"] = text

        keyboard = [
            [InlineKeyboardButton("ru", callback_data="lang_ru_add")],
            [InlineKeyboardButton("en", callback_data="lang_en_add")]
        ]
        
        with open(img_path, 'rb') as photo:
            await update.message.reply_photo(
                photo=photo,
                caption="üåé –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ —Ä–µ—Ü–µ–ø—Ç–∞:",
                reply_markup=InlineKeyboardMarkup(keyboard)
            )

async def save_recipe(update: Update, context: ContextTypes.DEFAULT_TYPE):
    db_conn = context.bot_data["db_conn"]
    recipe_data = context.user_data["add_recipe"]
    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
    img_path = os.path.join(BASE_DIR, '..', 'resources', 'images', 'add_recipe.png')

    name = recipe_data["name"]
    ingredients = recipe_data["ingredients"]
    ingredients_raw = recipe_data["ingredients_raw"]
    steps = recipe_data["steps"]
    servings = recipe_data["servings"]
    serving_size = recipe_data["serving_size"]
    lang = recipe_data.get("lang", "en")

    created_by = update.effective_user.username or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    if created_by:
        created_by = f"@{created_by}"
    else:
        created_by = None

    cursor = db_conn.cursor()
    cursor.execute("""
        INSERT INTO recipes (name, ingredients, ingredients_raw, steps, servings, serving_size, created_by, lang)
        VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
    """, (
        name, ingredients, ingredients_raw, steps, servings, serving_size, created_by, lang
    ))
    db_conn.commit()

    keyboard = [
        [InlineKeyboardButton("–ù–∞–∑–∞–¥ ‚è™", callback_data='back')]
    ]

    with open(img_path, 'rb') as photo:
        if update.message:
            await update.message.reply_photo(
                photo=photo,
                caption="‚úÖ –†–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ!",
                reply_markup=InlineKeyboardMarkup(keyboard))
        elif update.callback_query:
            await update.callback_query.message.reply_photo(
                photo=photo,
                caption="‚úÖ –†–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ!",
                reply_markup=InlineKeyboardMarkup(keyboard))

    context.user_data.pop("add_recipe", None)