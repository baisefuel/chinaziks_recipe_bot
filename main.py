import os
from dotenv import load_dotenv
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

load_dotenv()
TOKEN = os.getenv("TG_TOKEN")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–ù–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Çüîç", callback_data='search')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Treat's Searcher! üë®üèæ‚Äçü¶Ø\n"
        "–ë–æ—Ç –¥–ª—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ª—É—á—à–∏—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ ü•µ\n"
        "–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å? üòä",
        reply_markup=reply_markup
    )

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    keyboard = [
        [InlineKeyboardButton("–ù–∞–π—Ç–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –±–ª—é–¥–∞ üçΩ", callback_data='search_by_name')],
        [InlineKeyboardButton("–ù–∞–π—Ç–∏ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—É üçó", callback_data='search_by_igredients')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥ ‚è™", callback_data='back')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if query.data == 'search':
        await query.edit_message_text(text="–ö–∞–∫ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç?", reply_markup=reply_markup)
    elif query.data == 'back':
        keyboard = [
            [InlineKeyboardButton("–ù–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Çüîç", callback_data='search')],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Treat's Searcher! üë®üèæ‚Äçü¶Ø\n"
        "–ë–æ—Ç –¥–ª—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ª—É—á—à–∏—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ ü•µ\n"
        "–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å? üòä", reply_markup=reply_markup)


def main():
    app = ApplicationBuilder().token(TOKEN).build()
    
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_callback))

    app.run_polling()

if __name__ == "__main__":
    main()
